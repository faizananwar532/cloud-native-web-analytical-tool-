version: "3"

volumes:
  metadata_data: {}
  middle_var: {}
  historical_var: {}
  broker_var: {}
  coordinator_var: {}
  router_var: {}


services:

  # Kafka
  kafka:
    image: 'bitnami/kafka:2'
    container_name: Kafka
    ports:
      - '9092:9092'
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:29092,PLAINTEXT_HOST://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:29092,PLAINTEXT_HOST://kafka:9092
    
  # Divolte
  divolte:
    image: divolte/divolte-collector
    container_name: Divolte
    environment:
      - DIVOLTE_KAFKA_BROKER_LIST=kafka:29092
    volumes:
      - ./conf/divolte/:/opt/divolte/divolte-collector/conf/
    ports:
      - 8290:8290
    depends_on:
      - kafka

  # Superset
  superset:
    image: amancevice/superset:0.18.5
    container_name: Superset
    ports:
      - 8088:8088

  # Sample App
  app:
    build: app/
    container_name: App
    ports:
      - 8090:8090
  
  # Zookeeper
  zookeeper:
    container_name: Zookeeper
    image: zookeeper:3.5
    ports:
      - 2181:2181
    environment:
      - ZOO_MY_ID=1
  
  # Druid
  postgres:
    container_name: Postgres
    image: postgres:latest
    volumes:
      - metadata_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=FoolishPassword
      - POSTGRES_USER=druid
      - POSTGRES_DB=druid

  coordinator:
    image: apache/druid:0.17.0
    container_name: Druid_coordinator
    volumes:
      - ./storage:/opt/data
      - coordinator_var:/opt/druid/var
    depends_on: 
      - zookeeper
      - postgres
    ports:
      - "8081:8081"
    command:
      - coordinator
    env_file:
      - environment

  broker:
    image: apache/druid:0.17.0
    container_name: Druid_broker
    volumes:
      - broker_var:/opt/druid/var
    depends_on: 
      - zookeeper
      - postgres
      - coordinator
    ports:
      - "8082:8082"
    command:
      - broker
    env_file:
      - environment

  historical:
    image: apache/druid:0.17.0
    container_name: Druid_historical
    volumes:
      - ./storage:/opt/data
      - historical_var:/opt/druid/var
    depends_on: 
      - zookeeper
      - postgres
      - coordinator
    ports:
      - "8083:8083"
    command:
      - historical
    env_file:
      - environment

  middlemanager:
    image: apache/druid:0.17.0
    container_name: Druid_middlemanager
    volumes:
      - ./storage:/opt/data
      - middle_var:/opt/druid/var
    depends_on: 
      - zookeeper
      - postgres
      - coordinator
    ports:
      - "8091:8091"
    command:
      - middleManager
    env_file:
      - environment

  router:
    image: apache/druid:0.17.0
    container_name: Druid_router
    volumes:
      - router_var:/opt/druid/var
    depends_on:
      - zookeeper
      - postgres
      - coordinator
    ports:
      - "8888:8888"
    command:
      - router
    env_file:
      - environment
